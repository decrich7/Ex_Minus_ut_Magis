# -*- coding: utf-8 -*-
from aiogram.dispatcher import FSMContext

from data import config
from aiogram.utils.markdown import hlink, hcode

from keyboards.inline.pay import paid_keyboard
from loader import dp, db
from aiogram import types
from aiogram.types import Message, CallbackQuery
from keyboards.inline.product import choice
from loader import dp
from states.states import Test
from keyboards.inline.callback_datas import buy
from utils.misc.qiwi import Payment


@dp.message_handler(text='–ú–µ–Ω—é üìù')
async def bot_start(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é üìã', reply_markup=choice)




@dp.callback_query_handler(buy.filter(item_name="pies_buy"))
async def buying(call: CallbackQuery, callback_data: dict, state: FSMContext):
    await call.answer(cache_time=60)
    prise = callback_data.get("prise")
    type = callback_data.get("type")
    payment = Payment(amount=prise)
    payment.create()
    await call.message.answer(
        "\n".join([
            f"–û–ø–ª–∞—Ç–∏—Ç–µ –Ω–µ –º–µ–Ω–µ–µ {prise} ‚ÇΩ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –ø–æ –∞–¥—Ä–µ—Å—É",
            hlink(config.WALLET_QIWI, url=payment.invoice),
            "–ò–ª–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ ID –ø–ª–∞—Ç–µ–∂–∞:",
            hcode(payment.id)
        ]),
        reply_markup=paid_keyboard)
    await state.set_state("qiwi")
    await state.update_data(payment=payment, tovar='–ü–∏—Ä–æ–∂–æ–∫', prise=prise, type=type)

@dp.callback_query_handler(buy.filter(item_name="burger_buy"))
async def buying1(call: CallbackQuery, callback_data: dict, state: FSMContext):
    await call.answer(cache_time=60)
    prise = callback_data.get("prise")
    type = callback_data.get("type")
    payment = Payment(amount=prise)
    payment.create()
    await call.message.answer(
        "\n".join([
            f"–û–ø–ª–∞—Ç–∏—Ç–µ –Ω–µ –º–µ–Ω–µ–µ {prise} ‚ÇΩ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –ø–æ –∞–¥—Ä–µ—Å—É",
            hlink(config.WALLET_QIWI, url=payment.invoice),
            "–ò –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ ID –ø–ª–∞—Ç–µ–∂–∞:",
            hcode(payment.id)
        ]),
        reply_markup=paid_keyboard)
    await state.set_state("qiwi")
    await state.update_data(payment=payment, tovar='–ë—É—Ä–≥–µ—Ä', prise=prise, type=type)


@dp.callback_query_handler(buy.filter(item_name="pissa_buy"))
async def buying2(call: CallbackQuery, callback_data: dict, state: FSMContext):
    await call.answer(cache_time=60)
    prise = callback_data.get("prise")
    type = callback_data.get("type")
    payment = Payment(amount=prise)
    payment.create()
    await call.message.answer(
        "\n".join([
            f"–û–ø–ª–∞—Ç–∏—Ç–µ –Ω–µ –º–µ–Ω–µ–µ {prise} ‚ÇΩ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –ø–æ –∞–¥—Ä–µ—Å—É",
            hlink(config.WALLET_QIWI, url=payment.invoice),
            "–ò –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ ID –ø–ª–∞—Ç–µ–∂–∞:",
            hcode(payment.id)
        ]),
        reply_markup=paid_keyboard)
    await state.set_state("qiwi")
    await state.update_data(payment=payment, tovar='–ü–∏—Ü—Ü–∞', prise=prise, type=type)


@dp.callback_query_handler(buy.filter(item_name="shava_buy"))
async def buying2(call: CallbackQuery, callback_data: dict, state: FSMContext):
    await call.answer(cache_time=60)
    prise = callback_data.get("prise")
    prise = callback_data.get("prise")
    type = callback_data.get("type")
    payment = Payment(amount=prise)
    payment.create()
    await call.message.answer(
        "\n".join([
            f"–û–ø–ª–∞—Ç–∏—Ç–µ –Ω–µ –º–µ–Ω–µ–µ {prise} —Ä—É–±. –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –ø–æ –∞–¥—Ä–µ—Å—É",
            hlink(config.WALLET_QIWI, url=payment.invoice),
            "–ò –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ ID –ø–ª–∞—Ç–µ–∂–∞:",
            hcode(payment.id)
        ]),
        reply_markup=paid_keyboard)
    await state.set_state("qiwi")
    await state.update_data(payment=payment, tovar='–®–∞—É—Ä–º–∞', prise=prise, type=type)
