# -*- coding: utf-8 -*-
import random
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.utils.markdown import hcode, hlink
from loader import db
from loader import dp
from utils.misc.qiwi import Payment, NoPaymentFound, NotEnoughMoney

@dp.callback_query_handler(text="cancel", state="qiwi")
async def cancel_payment(call: types.CallbackQuery, state: FSMContext):
    await call.message.edit_text("–û—Ç–º–µ–Ω–µ–Ω–æ üòî")
    await state.finish()


@dp.callback_query_handler(text="paid", state="qiwi")
async def approve_payment(call: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()
    payment: Payment = data.get("payment")
    try:
        payment.check_payment()
    except NoPaymentFound:
        await call.message.answer("–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

        return
    except NotEnoughMoney:
        await call.message.answer("–û–ø–ª–∞—á–µ–Ω–Ω–∞—è —Å—É–º–∞ –º–µ–Ω—å—à–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π.")
        return

    else:
        await call.message.answer("–£—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω–æ")
        id_buy = random.randint(10000, 90000)
        await call.message.answer(f'–û—Ç–ª–∏—á–Ω–æ!\n'
                                  f'–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–π –ø–µ—Ä–µ–∫—É—Å –ø—Ä–æ—Å—Ç–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥:\n'
                                  f'     {id_buy}\n'
                                  f'–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è, –∫–æ–¥ –±—É–¥–µ—Ç –∞–Ω—É–ª–∏—Ä–æ–≤–∞–Ω')
        await db.add_inf_tovar(data['type'], str(id_buy), call.message.chat.id)
    await call.message.edit_reply_markup()
    await state.finish()
